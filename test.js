var test = require('tape');
var tapSpec = require('tap-spec');
var fn = require('./');

test.createStream()
.pipe(tapSpec())
.pipe(process.stdout);

test('should expect a string', function (t) {
	t.throws(function () {
		fn({});
	}, 'unicode-range expected a String');
	t.end();
});

test('allows shorthand', function (t) {
	t.equal(fn('3071'), 'Hiragana');
	t.end();
});

test('accounts for Private-Use ranges', t => {
	t.equal(fn('U+e000'), 'Private Use Area');
	t.equal(fn('U+f8f7'), 'Private Use Area');
	t.equal(fn('U+f8ff'), 'Private Use Area');
	t.equal(fn('U+F0000'), 'Supplemental Private Use Area-A');
	t.equal(fn('U+FFFFD'), 'Supplemental Private Use Area-A');
	t.equal(fn('U+100000'), 'Supplemental Private Use Area-B');
	t.equal(fn('U+10FFFD'), 'Supplemental Private Use Area-B');
	t.end();
});

test('should get unicode category', function (t) {
	t.equal(fn('U+001B'), 'Control Character');
	t.equal(fn('U+02A8'), 'IPA Extensions');
	t.equal(fn('U+0E56'), 'Thai');
	t.equal(fn('U+10E4'), 'Georgian');
	t.equal(fn('U+0462'), 'Cyrillic');
	t.equal(fn('U+3071'), 'Hiragana');
	t.end();
});

test('it should cover the entire unicode range', function (t) {
	t.equal(fn('U+0'), 'Control Character');
	t.equal(fn('U+17'), 'Control Character');
	t.equal(fn('U+1f'), 'Control Character');
	t.equal(fn('U+20'), 'Basic Latin');
	t.equal(fn('U+77'), 'Basic Latin');
	t.equal(fn('U+7f'), 'Basic Latin');
	t.equal(fn('U+80'), 'Latin-1 Supplement');
	t.equal(fn('U+f7'), 'Latin-1 Supplement');
	t.equal(fn('U+ff'), 'Latin-1 Supplement');
	t.equal(fn('U+100'), 'Latin Extended-A');
	t.equal(fn('U+177'), 'Latin Extended-A');
	t.equal(fn('U+17f'), 'Latin Extended-A');
	t.equal(fn('U+180'), 'Latin Extended-B');
	t.equal(fn('U+247'), 'Latin Extended-B');
	t.equal(fn('U+24f'), 'Latin Extended-B');
	t.equal(fn('U+250'), 'IPA Extensions');
	t.equal(fn('U+2a7'), 'IPA Extensions');
	t.equal(fn('U+2af'), 'IPA Extensions');
	t.equal(fn('U+2b0'), 'Spacing Modifier Letters');
	t.equal(fn('U+2f7'), 'Spacing Modifier Letters');
	t.equal(fn('U+2ff'), 'Spacing Modifier Letters');
	t.equal(fn('U+300'), 'Combining Diacritical Marks');
	t.equal(fn('U+367'), 'Combining Diacritical Marks');
	t.equal(fn('U+36f'), 'Combining Diacritical Marks');
	t.equal(fn('U+370'), 'Greek and Coptic');
	t.equal(fn('U+3f7'), 'Greek and Coptic');
	t.equal(fn('U+3ff'), 'Greek and Coptic');
	t.equal(fn('U+400'), 'Cyrillic');
	t.equal(fn('U+4f7'), 'Cyrillic');
	t.equal(fn('U+4ff'), 'Cyrillic');
	t.equal(fn('U+500'), 'Cyrillic Supplement');
	t.equal(fn('U+527'), 'Cyrillic Supplement');
	t.equal(fn('U+52f'), 'Cyrillic Supplement');
	t.equal(fn('U+530'), 'Armenian');
	t.equal(fn('U+587'), 'Armenian');
	t.equal(fn('U+58f'), 'Armenian');
	t.equal(fn('U+590'), 'Hebrew');
	t.equal(fn('U+5f7'), 'Hebrew');
	t.equal(fn('U+5ff'), 'Hebrew');
	t.equal(fn('U+600'), 'Arabic');
	t.equal(fn('U+6f7'), 'Arabic');
	t.equal(fn('U+6ff'), 'Arabic');
	t.equal(fn('U+700'), 'Syriac');
	t.equal(fn('U+747'), 'Syriac');
	t.equal(fn('U+74f'), 'Syriac');
	t.equal(fn('U+750'), 'Arabic Supplement');
	t.equal(fn('U+777'), 'Arabic Supplement');
	t.equal(fn('U+77f'), 'Arabic Supplement');
	t.equal(fn('U+780'), 'Thaana');
	t.equal(fn('U+7b7'), 'Thaana');
	t.equal(fn('U+7bf'), 'Thaana');
	t.equal(fn('U+7c0'), 'NKo');
	t.equal(fn('U+7f7'), 'NKo');
	t.equal(fn('U+7ff'), 'NKo');
	t.equal(fn('U+800'), 'Samaritan');
	t.equal(fn('U+837'), 'Samaritan');
	t.equal(fn('U+83f'), 'Samaritan');
	t.equal(fn('U+840'), 'Mandaic');
	t.equal(fn('U+857'), 'Mandaic');
	t.equal(fn('U+85f'), 'Mandaic');
	t.equal(fn('U+8a0'), 'Arabic Extended-A');
	t.equal(fn('U+8f7'), 'Arabic Extended-A');
	t.equal(fn('U+8ff'), 'Arabic Extended-A');
	t.equal(fn('U+900'), 'Devanagari');
	t.equal(fn('U+977'), 'Devanagari');
	t.equal(fn('U+97f'), 'Devanagari');
	t.equal(fn('U+980'), 'Bengali');
	t.equal(fn('U+9f7'), 'Bengali');
	t.equal(fn('U+9ff'), 'Bengali');
	t.equal(fn('U+a00'), 'Gurmukhi');
	t.equal(fn('U+a77'), 'Gurmukhi');
	t.equal(fn('U+a7f'), 'Gurmukhi');
	t.equal(fn('U+a80'), 'Gujarati');
	t.equal(fn('U+af7'), 'Gujarati');
	t.equal(fn('U+aff'), 'Gujarati');
	t.equal(fn('U+b00'), 'Oriya');
	t.equal(fn('U+b77'), 'Oriya');
	t.equal(fn('U+b7f'), 'Oriya');
	t.equal(fn('U+b80'), 'Tamil');
	t.equal(fn('U+bf7'), 'Tamil');
	t.equal(fn('U+bff'), 'Tamil');
	t.equal(fn('U+c00'), 'Telugu');
	t.equal(fn('U+c77'), 'Telugu');
	t.equal(fn('U+c7f'), 'Telugu');
	t.equal(fn('U+c80'), 'Kannada');
	t.equal(fn('U+cf7'), 'Kannada');
	t.equal(fn('U+cff'), 'Kannada');
	t.equal(fn('U+d00'), 'Malayalam');
	t.equal(fn('U+d77'), 'Malayalam');
	t.equal(fn('U+d7f'), 'Malayalam');
	t.equal(fn('U+d80'), 'Sinhala');
	t.equal(fn('U+df7'), 'Sinhala');
	t.equal(fn('U+dff'), 'Sinhala');
	t.equal(fn('U+e00'), 'Thai');
	t.equal(fn('U+e77'), 'Thai');
	t.equal(fn('U+e7f'), 'Thai');
	t.equal(fn('U+e80'), 'Lao');
	t.equal(fn('U+ef7'), 'Lao');
	t.equal(fn('U+eff'), 'Lao');
	t.equal(fn('U+f00'), 'Tibetan');
	t.equal(fn('U+ff7'), 'Tibetan');
	t.equal(fn('U+fff'), 'Tibetan');
	t.equal(fn('U+1000'), 'Myanmar');
	t.equal(fn('U+1097'), 'Myanmar');
	t.equal(fn('U+109f'), 'Myanmar');
	t.equal(fn('U+10a0'), 'Georgian');
	t.equal(fn('U+10f7'), 'Georgian');
	t.equal(fn('U+10ff'), 'Georgian');
	t.equal(fn('U+1100'), 'Hangul Jamo');
	t.equal(fn('U+11f7'), 'Hangul Jamo');
	t.equal(fn('U+11ff'), 'Hangul Jamo');
	t.equal(fn('U+1200'), 'Ethiopic');
	t.equal(fn('U+1377'), 'Ethiopic');
	t.equal(fn('U+137f'), 'Ethiopic');
	t.equal(fn('U+1380'), 'Ethiopic Supplement');
	t.equal(fn('U+1397'), 'Ethiopic Supplement');
	t.equal(fn('U+139f'), 'Ethiopic Supplement');
	t.equal(fn('U+13a0'), 'Cherokee');
	t.equal(fn('U+13f7'), 'Cherokee');
	t.equal(fn('U+13ff'), 'Cherokee');
	t.equal(fn('U+1400'), 'Unified Canadian Aboriginal Syllabics');
	t.equal(fn('U+1677'), 'Unified Canadian Aboriginal Syllabics');
	t.equal(fn('U+167f'), 'Unified Canadian Aboriginal Syllabics');
	t.equal(fn('U+1680'), 'Ogham');
	t.equal(fn('U+1697'), 'Ogham');
	t.equal(fn('U+169f'), 'Ogham');
	t.equal(fn('U+16a0'), 'Runic');
	t.equal(fn('U+16f7'), 'Runic');
	t.equal(fn('U+16ff'), 'Runic');
	t.equal(fn('U+1700'), 'Tagalog');
	t.equal(fn('U+1717'), 'Tagalog');
	t.equal(fn('U+171f'), 'Tagalog');
	t.equal(fn('U+1720'), 'Hanunoo');
	t.equal(fn('U+1737'), 'Hanunoo');
	t.equal(fn('U+173f'), 'Hanunoo');
	t.equal(fn('U+1740'), 'Buhid');
	t.equal(fn('U+1757'), 'Buhid');
	t.equal(fn('U+175f'), 'Buhid');
	t.equal(fn('U+1760'), 'Tagbanwa');
	t.equal(fn('U+1777'), 'Tagbanwa');
	t.equal(fn('U+177f'), 'Tagbanwa');
	t.equal(fn('U+1780'), 'Khmer');
	t.equal(fn('U+17f7'), 'Khmer');
	t.equal(fn('U+17ff'), 'Khmer');
	t.equal(fn('U+1800'), 'Mongolian');
	t.equal(fn('U+18a7'), 'Mongolian');
	t.equal(fn('U+18af'), 'Mongolian');
	t.equal(fn('U+18b0'), 'Unified Canadian Aboriginal Syllabics Extended');
	t.equal(fn('U+18f7'), 'Unified Canadian Aboriginal Syllabics Extended');
	t.equal(fn('U+18ff'), 'Unified Canadian Aboriginal Syllabics Extended');
	t.equal(fn('U+1900'), 'Limbu');
	t.equal(fn('U+1947'), 'Limbu');
	t.equal(fn('U+194f'), 'Limbu');
	t.equal(fn('U+1950'), 'Tai Le');
	t.equal(fn('U+1977'), 'Tai Le');
	t.equal(fn('U+197f'), 'Tai Le');
	t.equal(fn('U+1980'), 'New Tai Lue');
	t.equal(fn('U+19d7'), 'New Tai Lue');
	t.equal(fn('U+19df'), 'New Tai Lue');
	t.equal(fn('U+19e0'), 'Khmer Symbols');
	t.equal(fn('U+19f7'), 'Khmer Symbols');
	t.equal(fn('U+19ff'), 'Khmer Symbols');
	t.equal(fn('U+1a00'), 'Buginese');
	t.equal(fn('U+1a17'), 'Buginese');
	t.equal(fn('U+1a1f'), 'Buginese');
	t.equal(fn('U+1a20'), 'Tai Tham');
	t.equal(fn('U+1aa7'), 'Tai Tham');
	t.equal(fn('U+1aaf'), 'Tai Tham');
	t.equal(fn('U+1ab0'), 'Combining Diacritical Marks Extended');
	t.equal(fn('U+1af7'), 'Combining Diacritical Marks Extended');
	t.equal(fn('U+1aff'), 'Combining Diacritical Marks Extended');
	t.equal(fn('U+1b00'), 'Balinese');
	t.equal(fn('U+1b77'), 'Balinese');
	t.equal(fn('U+1b7f'), 'Balinese');
	t.equal(fn('U+1b80'), 'Sundanese');
	t.equal(fn('U+1bb7'), 'Sundanese');
	t.equal(fn('U+1bbf'), 'Sundanese');
	t.equal(fn('U+1bc0'), 'Batak');
	t.equal(fn('U+1bf7'), 'Batak');
	t.equal(fn('U+1bff'), 'Batak');
	t.equal(fn('U+1c00'), 'Lepcha');
	t.equal(fn('U+1c47'), 'Lepcha');
	t.equal(fn('U+1c4f'), 'Lepcha');
	t.equal(fn('U+1c50'), 'Ol Chiki');
	t.equal(fn('U+1c77'), 'Ol Chiki');
	t.equal(fn('U+1c7f'), 'Ol Chiki');
	t.equal(fn('U+1cc0'), 'Sundanese Supplement');
	t.equal(fn('U+1cc7'), 'Sundanese Supplement');
	t.equal(fn('U+1ccf'), 'Sundanese Supplement');
	t.equal(fn('U+1cd0'), 'Vedic Extensions');
	t.equal(fn('U+1cf7'), 'Vedic Extensions');
	t.equal(fn('U+1cff'), 'Vedic Extensions');
	t.equal(fn('U+1d00'), 'Phonetic Extensions');
	t.equal(fn('U+1d77'), 'Phonetic Extensions');
	t.equal(fn('U+1d7f'), 'Phonetic Extensions');
	t.equal(fn('U+1d80'), 'Phonetic Extensions Supplement');
	t.equal(fn('U+1db7'), 'Phonetic Extensions Supplement');
	t.equal(fn('U+1dbf'), 'Phonetic Extensions Supplement');
	t.equal(fn('U+1dc0'), 'Combining Diacritical Marks Supplement');
	t.equal(fn('U+1df7'), 'Combining Diacritical Marks Supplement');
	t.equal(fn('U+1dff'), 'Combining Diacritical Marks Supplement');
	t.equal(fn('U+1e00'), 'Latin Extended Additional');
	t.equal(fn('U+1ef7'), 'Latin Extended Additional');
	t.equal(fn('U+1eff'), 'Latin Extended Additional');
	t.equal(fn('U+1f00'), 'Greek Extended');
	t.equal(fn('U+1ff7'), 'Greek Extended');
	t.equal(fn('U+1fff'), 'Greek Extended');
	t.equal(fn('U+2000'), 'General Punctuation');
	t.equal(fn('U+2067'), 'General Punctuation');
	t.equal(fn('U+206f'), 'General Punctuation');
	t.equal(fn('U+2070'), 'Superscripts and Subscripts');
	t.equal(fn('U+2097'), 'Superscripts and Subscripts');
	t.equal(fn('U+209f'), 'Superscripts and Subscripts');
	t.equal(fn('U+20a0'), 'Currency Symbols');
	t.equal(fn('U+20c7'), 'Currency Symbols');
	t.equal(fn('U+20cf'), 'Currency Symbols');
	t.equal(fn('U+20d0'), 'Combining Diacritical Marks for Symbols');
	t.equal(fn('U+20f7'), 'Combining Diacritical Marks for Symbols');
	t.equal(fn('U+20ff'), 'Combining Diacritical Marks for Symbols');
	t.equal(fn('U+2100'), 'Letterlike Symbols');
	t.equal(fn('U+2147'), 'Letterlike Symbols');
	t.equal(fn('U+214f'), 'Letterlike Symbols');
	t.equal(fn('U+2150'), 'Number Forms');
	t.equal(fn('U+2187'), 'Number Forms');
	t.equal(fn('U+218f'), 'Number Forms');
	t.equal(fn('U+2190'), 'Arrows');
	t.equal(fn('U+21f7'), 'Arrows');
	t.equal(fn('U+21ff'), 'Arrows');
	t.equal(fn('U+2200'), 'Mathematical Operators');
	t.equal(fn('U+22f7'), 'Mathematical Operators');
	t.equal(fn('U+22ff'), 'Mathematical Operators');
	t.equal(fn('U+2300'), 'Miscellaneous Technical');
	t.equal(fn('U+23f7'), 'Miscellaneous Technical');
	t.equal(fn('U+23ff'), 'Miscellaneous Technical');
	t.equal(fn('U+2400'), 'Control Pictures');
	t.equal(fn('U+2437'), 'Control Pictures');
	t.equal(fn('U+243f'), 'Control Pictures');
	t.equal(fn('U+2440'), 'Optical Character Recognition');
	t.equal(fn('U+2457'), 'Optical Character Recognition');
	t.equal(fn('U+245f'), 'Optical Character Recognition');
	t.equal(fn('U+2460'), 'Enclosed Alphanumerics');
	t.equal(fn('U+24f7'), 'Enclosed Alphanumerics');
	t.equal(fn('U+24ff'), 'Enclosed Alphanumerics');
	t.equal(fn('U+2500'), 'Box Drawing');
	t.equal(fn('U+2577'), 'Box Drawing');
	t.equal(fn('U+257f'), 'Box Drawing');
	t.equal(fn('U+2580'), 'Block Elements');
	t.equal(fn('U+2597'), 'Block Elements');
	t.equal(fn('U+259f'), 'Block Elements');
	t.equal(fn('U+25a0'), 'Geometric Shapes');
	t.equal(fn('U+25f7'), 'Geometric Shapes');
	t.equal(fn('U+25ff'), 'Geometric Shapes');
	t.equal(fn('U+2600'), 'Miscellaneous Symbols');
	t.equal(fn('U+26f7'), 'Miscellaneous Symbols');
	t.equal(fn('U+26ff'), 'Miscellaneous Symbols');
	t.equal(fn('U+2700'), 'Dingbats');
	t.equal(fn('U+27b7'), 'Dingbats');
	t.equal(fn('U+27bf'), 'Dingbats');
	t.equal(fn('U+27c0'), 'Miscellaneous Mathematical Symbols-A');
	t.equal(fn('U+27e7'), 'Miscellaneous Mathematical Symbols-A');
	t.equal(fn('U+27ef'), 'Miscellaneous Mathematical Symbols-A');
	t.equal(fn('U+27f0'), 'Supplemental Arrows-A');
	t.equal(fn('U+27f7'), 'Supplemental Arrows-A');
	t.equal(fn('U+27ff'), 'Supplemental Arrows-A');
	t.equal(fn('U+2800'), 'Braille Patterns');
	t.equal(fn('U+28f7'), 'Braille Patterns');
	t.equal(fn('U+28ff'), 'Braille Patterns');
	t.equal(fn('U+2900'), 'Supplemental Arrows-B');
	t.equal(fn('U+2977'), 'Supplemental Arrows-B');
	t.equal(fn('U+297f'), 'Supplemental Arrows-B');
	t.equal(fn('U+2980'), 'Miscellaneous Mathematical Symbols-B');
	t.equal(fn('U+29f7'), 'Miscellaneous Mathematical Symbols-B');
	t.equal(fn('U+29ff'), 'Miscellaneous Mathematical Symbols-B');
	t.equal(fn('U+2a00'), 'Supplemental Mathematical Operators');
	t.equal(fn('U+2af7'), 'Supplemental Mathematical Operators');
	t.equal(fn('U+2aff'), 'Supplemental Mathematical Operators');
	t.equal(fn('U+2b00'), 'Miscellaneous Symbols and Arrows');
	t.equal(fn('U+2bf7'), 'Miscellaneous Symbols and Arrows');
	t.equal(fn('U+2bff'), 'Miscellaneous Symbols and Arrows');
	t.equal(fn('U+2c00'), 'Glagolitic');
	t.equal(fn('U+2c57'), 'Glagolitic');
	t.equal(fn('U+2c5f'), 'Glagolitic');
	t.equal(fn('U+2c60'), 'Latin Extended-C');
	t.equal(fn('U+2c77'), 'Latin Extended-C');
	t.equal(fn('U+2c7f'), 'Latin Extended-C');
	t.equal(fn('U+2c80'), 'Coptic');
	t.equal(fn('U+2cf7'), 'Coptic');
	t.equal(fn('U+2cff'), 'Coptic');
	t.equal(fn('U+2d00'), 'Georgian Supplement');
	t.equal(fn('U+2d27'), 'Georgian Supplement');
	t.equal(fn('U+2d2f'), 'Georgian Supplement');
	t.equal(fn('U+2d30'), 'Tifinagh');
	t.equal(fn('U+2d77'), 'Tifinagh');
	t.equal(fn('U+2d7f'), 'Tifinagh');
	t.equal(fn('U+2d80'), 'Ethiopic Extended');
	t.equal(fn('U+2dd7'), 'Ethiopic Extended');
	t.equal(fn('U+2ddf'), 'Ethiopic Extended');
	t.equal(fn('U+2de0'), 'Cyrillic Extended-A');
	t.equal(fn('U+2df7'), 'Cyrillic Extended-A');
	t.equal(fn('U+2dff'), 'Cyrillic Extended-A');
	t.equal(fn('U+2e00'), 'Supplemental Punctuation');
	t.equal(fn('U+2e77'), 'Supplemental Punctuation');
	t.equal(fn('U+2e7f'), 'Supplemental Punctuation');
	t.equal(fn('U+2e80'), 'CJK Radicals Supplement');
	t.equal(fn('U+2ef7'), 'CJK Radicals Supplement');
	t.equal(fn('U+2eff'), 'CJK Radicals Supplement');
	t.equal(fn('U+2f00'), 'Kangxi Radicals');
	t.equal(fn('U+2fd7'), 'Kangxi Radicals');
	t.equal(fn('U+2fdf'), 'Kangxi Radicals');
	t.equal(fn('U+2ff0'), 'Ideographic Description Characters');
	t.equal(fn('U+2ff7'), 'Ideographic Description Characters');
	t.equal(fn('U+2fff'), 'Ideographic Description Characters');
	t.equal(fn('U+3000'), 'CJK Symbols and Punctuation');
	t.equal(fn('U+3037'), 'CJK Symbols and Punctuation');
	t.equal(fn('U+303f'), 'CJK Symbols and Punctuation');
	t.equal(fn('U+3040'), 'Hiragana');
	t.equal(fn('U+3097'), 'Hiragana');
	t.equal(fn('U+309f'), 'Hiragana');
	t.equal(fn('U+30a0'), 'Katakana');
	t.equal(fn('U+30f7'), 'Katakana');
	t.equal(fn('U+30ff'), 'Katakana');
	t.equal(fn('U+3100'), 'Bopomofo');
	t.equal(fn('U+3127'), 'Bopomofo');
	t.equal(fn('U+312f'), 'Bopomofo');
	t.equal(fn('U+3130'), 'Hangul Compatibility Jamo');
	t.equal(fn('U+3187'), 'Hangul Compatibility Jamo');
	t.equal(fn('U+318f'), 'Hangul Compatibility Jamo');
	t.equal(fn('U+3190'), 'Kanbun');
	t.equal(fn('U+3197'), 'Kanbun');
	t.equal(fn('U+319f'), 'Kanbun');
	t.equal(fn('U+31a0'), 'Bopomofo Extended');
	t.equal(fn('U+31b7'), 'Bopomofo Extended');
	t.equal(fn('U+31bf'), 'Bopomofo Extended');
	t.equal(fn('U+31c0'), 'CJK Strokes');
	t.equal(fn('U+31e7'), 'CJK Strokes');
	t.equal(fn('U+31ef'), 'CJK Strokes');
	t.equal(fn('U+31f0'), 'Katakana Phonetic Extensions');
	t.equal(fn('U+31f7'), 'Katakana Phonetic Extensions');
	t.equal(fn('U+31ff'), 'Katakana Phonetic Extensions');
	t.equal(fn('U+3200'), 'Enclosed CJK Letters and Months');
	t.equal(fn('U+32f7'), 'Enclosed CJK Letters and Months');
	t.equal(fn('U+32ff'), 'Enclosed CJK Letters and Months');
	t.equal(fn('U+3300'), 'CJK Compatibility');
	t.equal(fn('U+33f7'), 'CJK Compatibility');
	t.equal(fn('U+33ff'), 'CJK Compatibility');
	t.equal(fn('U+3400'), 'CJK Unified Ideographs Extension A');
	t.equal(fn('U+4db7'), 'CJK Unified Ideographs Extension A');
	t.equal(fn('U+4dbf'), 'CJK Unified Ideographs Extension A');
	t.equal(fn('U+4dc0'), 'Yijing Hexagram Symbols');
	t.equal(fn('U+4df7'), 'Yijing Hexagram Symbols');
	t.equal(fn('U+4dff'), 'Yijing Hexagram Symbols');
	t.equal(fn('U+4e00'), 'CJK Unified Ideographs');
	t.equal(fn('U+9ff7'), 'CJK Unified Ideographs');
	t.equal(fn('U+9fff'), 'CJK Unified Ideographs');
	t.equal(fn('U+a000'), 'Yi Syllables');
	t.equal(fn('U+a487'), 'Yi Syllables');
	t.equal(fn('U+a48f'), 'Yi Syllables');
	t.equal(fn('U+a490'), 'Yi Radicals');
	t.equal(fn('U+a4c7'), 'Yi Radicals');
	t.equal(fn('U+a4cf'), 'Yi Radicals');
	t.equal(fn('U+a4d0'), 'Lisu');
	t.equal(fn('U+a4f7'), 'Lisu');
	t.equal(fn('U+a4ff'), 'Lisu');
	t.equal(fn('U+a500'), 'Vai');
	t.equal(fn('U+a637'), 'Vai');
	t.equal(fn('U+a63f'), 'Vai');
	t.equal(fn('U+a640'), 'Cyrillic Extended-B');
	t.equal(fn('U+a697'), 'Cyrillic Extended-B');
	t.equal(fn('U+a69f'), 'Cyrillic Extended-B');
	t.equal(fn('U+a6a0'), 'Bamum');
	t.equal(fn('U+a6f7'), 'Bamum');
	t.equal(fn('U+a6ff'), 'Bamum');
	t.equal(fn('U+a700'), 'Modifier Tone Letters');
	t.equal(fn('U+a717'), 'Modifier Tone Letters');
	t.equal(fn('U+a71f'), 'Modifier Tone Letters');
	t.equal(fn('U+a720'), 'Latin Extended-D');
	t.equal(fn('U+a7f7'), 'Latin Extended-D');
	t.equal(fn('U+a7ff'), 'Latin Extended-D');
	t.equal(fn('U+a800'), 'Syloti Nagri');
	t.equal(fn('U+a827'), 'Syloti Nagri');
	t.equal(fn('U+a82f'), 'Syloti Nagri');
	t.equal(fn('U+a830'), 'Common Indic Number Forms');
	t.equal(fn('U+a837'), 'Common Indic Number Forms');
	t.equal(fn('U+a83f'), 'Common Indic Number Forms');
	t.equal(fn('U+a840'), 'Phags-pa');
	t.equal(fn('U+a877'), 'Phags-pa');
	t.equal(fn('U+a87f'), 'Phags-pa');
	t.equal(fn('U+a880'), 'Saurashtra');
	t.equal(fn('U+a8d7'), 'Saurashtra');
	t.equal(fn('U+a8df'), 'Saurashtra');
	t.equal(fn('U+a8e0'), 'Devanagari Extended');
	t.equal(fn('U+a8f7'), 'Devanagari Extended');
	t.equal(fn('U+a8ff'), 'Devanagari Extended');
	t.equal(fn('U+a900'), 'Kayah Li');
	t.equal(fn('U+a927'), 'Kayah Li');
	t.equal(fn('U+a92f'), 'Kayah Li');
	t.equal(fn('U+a930'), 'Rejang');
	t.equal(fn('U+a957'), 'Rejang');
	t.equal(fn('U+a95f'), 'Rejang');
	t.equal(fn('U+a960'), 'Hangul Jamo Extended-A');
	t.equal(fn('U+a977'), 'Hangul Jamo Extended-A');
	t.equal(fn('U+a97f'), 'Hangul Jamo Extended-A');
	t.equal(fn('U+a980'), 'Javanese');
	t.equal(fn('U+a9d7'), 'Javanese');
	t.equal(fn('U+a9df'), 'Javanese');
	t.equal(fn('U+a9e0'), 'Myanmar Extended-B');
	t.equal(fn('U+a9f7'), 'Myanmar Extended-B');
	t.equal(fn('U+a9ff'), 'Myanmar Extended-B');
	t.equal(fn('U+aa00'), 'Cham');
	t.equal(fn('U+aa57'), 'Cham');
	t.equal(fn('U+aa5f'), 'Cham');
	t.equal(fn('U+aa60'), 'Myanmar Extended-A');
	t.equal(fn('U+aa77'), 'Myanmar Extended-A');
	t.equal(fn('U+aa7f'), 'Myanmar Extended-A');
	t.equal(fn('U+aa80'), 'Tai Viet');
	t.equal(fn('U+aad7'), 'Tai Viet');
	t.equal(fn('U+aadf'), 'Tai Viet');
	t.equal(fn('U+aae0'), 'Meetei Mayek Extensions');
	t.equal(fn('U+aaf7'), 'Meetei Mayek Extensions');
	t.equal(fn('U+aaff'), 'Meetei Mayek Extensions');
	t.equal(fn('U+ab00'), 'Ethiopic Extended-A');
	t.equal(fn('U+ab27'), 'Ethiopic Extended-A');
	t.equal(fn('U+ab2f'), 'Ethiopic Extended-A');
	t.equal(fn('U+ab30'), 'Latin Extended-E');
	t.equal(fn('U+ab67'), 'Latin Extended-E');
	t.equal(fn('U+ab6f'), 'Latin Extended-E');
	t.equal(fn('U+ab70'), 'Cherokee Supplement');
	t.equal(fn('U+abb7'), 'Cherokee Supplement');
	t.equal(fn('U+abbf'), 'Cherokee Supplement');
	t.equal(fn('U+abc0'), 'Meetei Mayek');
	t.equal(fn('U+abf7'), 'Meetei Mayek');
	t.equal(fn('U+abff'), 'Meetei Mayek');
	t.equal(fn('U+ac00'), 'Hangul Syllables');
	t.equal(fn('U+d7a7'), 'Hangul Syllables');
	t.equal(fn('U+d7af'), 'Hangul Syllables');
	t.equal(fn('U+d7b0'), 'Hangul Jamo Extended-B');
	t.equal(fn('U+d7f7'), 'Hangul Jamo Extended-B');
	t.equal(fn('U+d7ff'), 'Hangul Jamo Extended-B');
	t.equal(fn('U+d800'), 'High Surrogates');
	t.equal(fn('U+db77'), 'High Surrogates');
	t.equal(fn('U+db7f'), 'High Surrogates');
	t.equal(fn('U+db80'), 'High Private Use Surrogates');
	t.equal(fn('U+dbf7'), 'High Private Use Surrogates');
	t.equal(fn('U+dbff'), 'High Private Use Surrogates');
	t.equal(fn('U+dc00'), 'Low Surrogates');
	t.equal(fn('U+dff7'), 'Low Surrogates');
	t.equal(fn('U+dfff'), 'Low Surrogates');
	t.equal(fn('U+f900'), 'CJK Compatibility Ideographs');
	t.equal(fn('U+faf7'), 'CJK Compatibility Ideographs');
	t.equal(fn('U+faff'), 'CJK Compatibility Ideographs');
	t.equal(fn('U+fb00'), 'Alphabetic Presentation Forms');
	t.equal(fn('U+fb47'), 'Alphabetic Presentation Forms');
	t.equal(fn('U+fb4f'), 'Alphabetic Presentation Forms');
	t.equal(fn('U+fb50'), 'Arabic Presentation Forms-A');
	t.equal(fn('U+fdf7'), 'Arabic Presentation Forms-A');
	t.equal(fn('U+fdff'), 'Arabic Presentation Forms-A');
	t.equal(fn('U+fe00'), 'Variation Selectors');
	t.equal(fn('U+fe07'), 'Variation Selectors');
	t.equal(fn('U+fe0f'), 'Variation Selectors');
	t.equal(fn('U+fe10'), 'Vertical Forms');
	t.equal(fn('U+fe17'), 'Vertical Forms');
	t.equal(fn('U+fe1f'), 'Vertical Forms');
	t.equal(fn('U+fe20'), 'Combining Half Marks');
	t.equal(fn('U+fe27'), 'Combining Half Marks');
	t.equal(fn('U+fe2f'), 'Combining Half Marks');
	t.equal(fn('U+fe30'), 'CJK Compatibility Forms');
	t.equal(fn('U+fe47'), 'CJK Compatibility Forms');
	t.equal(fn('U+fe4f'), 'CJK Compatibility Forms');
	t.equal(fn('U+fe50'), 'Small Form Variants');
	t.equal(fn('U+fe67'), 'Small Form Variants');
	t.equal(fn('U+fe6f'), 'Small Form Variants');
	t.equal(fn('U+fe70'), 'Arabic Presentation Forms-B');
	t.equal(fn('U+fef7'), 'Arabic Presentation Forms-B');
	t.equal(fn('U+feff'), 'Arabic Presentation Forms-B');
	t.equal(fn('U+ff00'), 'Halfwidth and Fullwidth Forms');
	t.equal(fn('U+ffe7'), 'Halfwidth and Fullwidth Forms');
	t.equal(fn('U+ffef'), 'Halfwidth and Fullwidth Forms');
	t.equal(fn('U+fff0'), 'Specials');
	t.equal(fn('U+fff7'), 'Specials');
	t.equal(fn('U+ffff'), 'Specials');
	t.equal(fn('U+10000'), 'Linear B Syllabary');
	t.equal(fn('U+10077'), 'Linear B Syllabary');
	t.equal(fn('U+1007f'), 'Linear B Syllabary');
	t.equal(fn('U+10080'), 'Linear B Ideograms');
	t.equal(fn('U+100f7'), 'Linear B Ideograms');
	t.equal(fn('U+100ff'), 'Linear B Ideograms');
	t.equal(fn('U+10100'), 'Aegean Numbers');
	t.equal(fn('U+10137'), 'Aegean Numbers');
	t.equal(fn('U+1013f'), 'Aegean Numbers');
	t.equal(fn('U+10140'), 'Ancient Greek Numbers');
	t.equal(fn('U+10187'), 'Ancient Greek Numbers');
	t.equal(fn('U+1018f'), 'Ancient Greek Numbers');
	t.equal(fn('U+10190'), 'Ancient Symbols');
	t.equal(fn('U+101c7'), 'Ancient Symbols');
	t.equal(fn('U+101cf'), 'Ancient Symbols');
	t.equal(fn('U+101d0'), 'Phaistos Disc');
	t.equal(fn('U+101f7'), 'Phaistos Disc');
	t.equal(fn('U+101ff'), 'Phaistos Disc');
	t.equal(fn('U+10280'), 'Lycian');
	t.equal(fn('U+10297'), 'Lycian');
	t.equal(fn('U+1029f'), 'Lycian');
	t.equal(fn('U+102a0'), 'Carian');
	t.equal(fn('U+102d7'), 'Carian');
	t.equal(fn('U+102df'), 'Carian');
	t.equal(fn('U+102e0'), 'Coptic Epact Numbers');
	t.equal(fn('U+102f7'), 'Coptic Epact Numbers');
	t.equal(fn('U+102ff'), 'Coptic Epact Numbers');
	t.equal(fn('U+10300'), 'Old Italic');
	t.equal(fn('U+10327'), 'Old Italic');
	t.equal(fn('U+1032f'), 'Old Italic');
	t.equal(fn('U+10330'), 'Gothic');
	t.equal(fn('U+10347'), 'Gothic');
	t.equal(fn('U+1034f'), 'Gothic');
	t.equal(fn('U+10350'), 'Old Permic');
	t.equal(fn('U+10377'), 'Old Permic');
	t.equal(fn('U+1037f'), 'Old Permic');
	t.equal(fn('U+10380'), 'Ugaritic');
	t.equal(fn('U+10397'), 'Ugaritic');
	t.equal(fn('U+1039f'), 'Ugaritic');
	t.equal(fn('U+103a0'), 'Old Persian');
	t.equal(fn('U+103d7'), 'Old Persian');
	t.equal(fn('U+103df'), 'Old Persian');
	t.equal(fn('U+10400'), 'Deseret');
	t.equal(fn('U+10447'), 'Deseret');
	t.equal(fn('U+1044f'), 'Deseret');
	t.equal(fn('U+10450'), 'Shavian');
	t.equal(fn('U+10477'), 'Shavian');
	t.equal(fn('U+1047f'), 'Shavian');
	t.equal(fn('U+10480'), 'Osmanya');
	t.equal(fn('U+104a7'), 'Osmanya');
	t.equal(fn('U+104af'), 'Osmanya');
	t.equal(fn('U+10500'), 'Elbasan');
	t.equal(fn('U+10527'), 'Elbasan');
	t.equal(fn('U+1052f'), 'Elbasan');
	t.equal(fn('U+10530'), 'Caucasian Albanian');
	t.equal(fn('U+10567'), 'Caucasian Albanian');
	t.equal(fn('U+1056f'), 'Caucasian Albanian');
	t.equal(fn('U+10600'), 'Linear A');
	t.equal(fn('U+10777'), 'Linear A');
	t.equal(fn('U+1077f'), 'Linear A');
	t.equal(fn('U+10800'), 'Cypriot Syllabary');
	t.equal(fn('U+10837'), 'Cypriot Syllabary');
	t.equal(fn('U+1083f'), 'Cypriot Syllabary');
	t.equal(fn('U+10840'), 'Imperial Aramaic');
	t.equal(fn('U+10857'), 'Imperial Aramaic');
	t.equal(fn('U+1085f'), 'Imperial Aramaic');
	t.equal(fn('U+10860'), 'Palmyrene');
	t.equal(fn('U+10877'), 'Palmyrene');
	t.equal(fn('U+1087f'), 'Palmyrene');
	t.equal(fn('U+10880'), 'Nabataean');
	t.equal(fn('U+108a7'), 'Nabataean');
	t.equal(fn('U+108af'), 'Nabataean');
	t.equal(fn('U+108e0'), 'Hatran');
	t.equal(fn('U+108f7'), 'Hatran');
	t.equal(fn('U+108ff'), 'Hatran');
	t.equal(fn('U+10900'), 'Phoenician');
	t.equal(fn('U+10917'), 'Phoenician');
	t.equal(fn('U+1091f'), 'Phoenician');
	t.equal(fn('U+10920'), 'Lydian');
	t.equal(fn('U+10937'), 'Lydian');
	t.equal(fn('U+1093f'), 'Lydian');
	t.equal(fn('U+10980'), 'Meroitic Hieroglyphs');
	t.equal(fn('U+10997'), 'Meroitic Hieroglyphs');
	t.equal(fn('U+1099f'), 'Meroitic Hieroglyphs');
	t.equal(fn('U+109a0'), 'Meroitic Cursive');
	t.equal(fn('U+109f7'), 'Meroitic Cursive');
	t.equal(fn('U+109ff'), 'Meroitic Cursive');
	t.equal(fn('U+10a00'), 'Kharoshthi');
	t.equal(fn('U+10a57'), 'Kharoshthi');
	t.equal(fn('U+10a5f'), 'Kharoshthi');
	t.equal(fn('U+10a60'), 'Old South Arabian');
	t.equal(fn('U+10a77'), 'Old South Arabian');
	t.equal(fn('U+10a7f'), 'Old South Arabian');
	t.equal(fn('U+10a80'), 'Old North Arabian');
	t.equal(fn('U+10a97'), 'Old North Arabian');
	t.equal(fn('U+10a9f'), 'Old North Arabian');
	t.equal(fn('U+10ac0'), 'Manichaean');
	t.equal(fn('U+10af7'), 'Manichaean');
	t.equal(fn('U+10aff'), 'Manichaean');
	t.equal(fn('U+10b00'), 'Avestan');
	t.equal(fn('U+10b37'), 'Avestan');
	t.equal(fn('U+10b3f'), 'Avestan');
	t.equal(fn('U+10b40'), 'Inscriptional Parthian');
	t.equal(fn('U+10b57'), 'Inscriptional Parthian');
	t.equal(fn('U+10b5f'), 'Inscriptional Parthian');
	t.equal(fn('U+10b60'), 'Inscriptional Pahlavi');
	t.equal(fn('U+10b77'), 'Inscriptional Pahlavi');
	t.equal(fn('U+10b7f'), 'Inscriptional Pahlavi');
	t.equal(fn('U+10b80'), 'Psalter Pahlavi');
	t.equal(fn('U+10ba7'), 'Psalter Pahlavi');
	t.equal(fn('U+10baf'), 'Psalter Pahlavi');
	t.equal(fn('U+10c00'), 'Old Turkic');
	t.equal(fn('U+10c47'), 'Old Turkic');
	t.equal(fn('U+10c4f'), 'Old Turkic');
	t.equal(fn('U+10c80'), 'Old Hungarian');
	t.equal(fn('U+10cf7'), 'Old Hungarian');
	t.equal(fn('U+10cff'), 'Old Hungarian');
	t.equal(fn('U+10e60'), 'Rumi Numeral Symbols');
	t.equal(fn('U+10e77'), 'Rumi Numeral Symbols');
	t.equal(fn('U+10e7f'), 'Rumi Numeral Symbols');
	t.equal(fn('U+11000'), 'Brahmi');
	t.equal(fn('U+11077'), 'Brahmi');
	t.equal(fn('U+1107f'), 'Brahmi');
	t.equal(fn('U+11080'), 'Kaithi');
	t.equal(fn('U+110c7'), 'Kaithi');
	t.equal(fn('U+110cf'), 'Kaithi');
	t.equal(fn('U+110d0'), 'Sora Sompeng');
	t.equal(fn('U+110f7'), 'Sora Sompeng');
	t.equal(fn('U+110ff'), 'Sora Sompeng');
	t.equal(fn('U+11100'), 'Chakma');
	t.equal(fn('U+11147'), 'Chakma');
	t.equal(fn('U+1114f'), 'Chakma');
	t.equal(fn('U+11150'), 'Mahajani');
	t.equal(fn('U+11177'), 'Mahajani');
	t.equal(fn('U+1117f'), 'Mahajani');
	t.equal(fn('U+11180'), 'Sharada');
	t.equal(fn('U+111d7'), 'Sharada');
	t.equal(fn('U+111df'), 'Sharada');
	t.equal(fn('U+111e0'), 'Sinhala Archaic Numbers');
	t.equal(fn('U+111f7'), 'Sinhala Archaic Numbers');
	t.equal(fn('U+111ff'), 'Sinhala Archaic Numbers');
	t.equal(fn('U+11200'), 'Khojki');
	t.equal(fn('U+11247'), 'Khojki');
	t.equal(fn('U+1124f'), 'Khojki');
	t.equal(fn('U+11280'), 'Multani');
	t.equal(fn('U+112a7'), 'Multani');
	t.equal(fn('U+112af'), 'Multani');
	t.equal(fn('U+112b0'), 'Khudawadi');
	t.equal(fn('U+112f7'), 'Khudawadi');
	t.equal(fn('U+112ff'), 'Khudawadi');
	t.equal(fn('U+11300'), 'Grantha');
	t.equal(fn('U+11377'), 'Grantha');
	t.equal(fn('U+1137f'), 'Grantha');
	t.equal(fn('U+11480'), 'Tirhuta');
	t.equal(fn('U+114d7'), 'Tirhuta');
	t.equal(fn('U+114df'), 'Tirhuta');
	t.equal(fn('U+11580'), 'Siddham');
	t.equal(fn('U+115f7'), 'Siddham');
	t.equal(fn('U+115ff'), 'Siddham');
	t.equal(fn('U+11600'), 'Modi');
	t.equal(fn('U+11657'), 'Modi');
	t.equal(fn('U+1165f'), 'Modi');
	t.equal(fn('U+11680'), 'Takri');
	t.equal(fn('U+116c7'), 'Takri');
	t.equal(fn('U+116cf'), 'Takri');
	t.equal(fn('U+11700'), 'Ahom');
	t.equal(fn('U+11737'), 'Ahom');
	t.equal(fn('U+1173f'), 'Ahom');
	t.equal(fn('U+118a0'), 'Warang Citi');
	t.equal(fn('U+118f7'), 'Warang Citi');
	t.equal(fn('U+118ff'), 'Warang Citi');
	t.equal(fn('U+11ac0'), 'Pau Cin Hau');
	t.equal(fn('U+11af7'), 'Pau Cin Hau');
	t.equal(fn('U+11aff'), 'Pau Cin Hau');
	t.equal(fn('U+12000'), 'Cuneiform');
	t.equal(fn('U+123f7'), 'Cuneiform');
	t.equal(fn('U+123ff'), 'Cuneiform');
	t.equal(fn('U+12400'), 'Cuneiform Numbers and Punctuation');
	t.equal(fn('U+12477'), 'Cuneiform Numbers and Punctuation');
	t.equal(fn('U+1247f'), 'Cuneiform Numbers and Punctuation');
	t.equal(fn('U+12480'), 'Early Dynastic Cuneiform');
	t.equal(fn('U+12547'), 'Early Dynastic Cuneiform');
	t.equal(fn('U+1254f'), 'Early Dynastic Cuneiform');
	t.equal(fn('U+13000'), 'Egyptian Hieroglyphs');
	t.equal(fn('U+13427'), 'Egyptian Hieroglyphs');
	t.equal(fn('U+1342f'), 'Egyptian Hieroglyphs');
	t.equal(fn('U+14400'), 'Anatolian Hieroglyphs');
	t.equal(fn('U+14677'), 'Anatolian Hieroglyphs');
	t.equal(fn('U+1467f'), 'Anatolian Hieroglyphs');
	t.equal(fn('U+16800'), 'Bamum Supplement');
	t.equal(fn('U+16a37'), 'Bamum Supplement');
	t.equal(fn('U+16a3f'), 'Bamum Supplement');
	t.equal(fn('U+16a40'), 'Mro');
	t.equal(fn('U+16a67'), 'Mro');
	t.equal(fn('U+16a6f'), 'Mro');
	t.equal(fn('U+16ad0'), 'Bassa Vah');
	t.equal(fn('U+16af7'), 'Bassa Vah');
	t.equal(fn('U+16aff'), 'Bassa Vah');
	t.equal(fn('U+16b00'), 'Pahawh Hmong');
	t.equal(fn('U+16b87'), 'Pahawh Hmong');
	t.equal(fn('U+16b8f'), 'Pahawh Hmong');
	t.equal(fn('U+16f00'), 'Miao');
	t.equal(fn('U+16f97'), 'Miao');
	t.equal(fn('U+16f9f'), 'Miao');
	t.equal(fn('U+1b000'), 'Kana Supplement');
	t.equal(fn('U+1b0f7'), 'Kana Supplement');
	t.equal(fn('U+1b0ff'), 'Kana Supplement');
	t.equal(fn('U+1bc00'), 'Duployan');
	t.equal(fn('U+1bc97'), 'Duployan');
	t.equal(fn('U+1bc9f'), 'Duployan');
	t.equal(fn('U+1bca0'), 'Shorthand Format Controls');
	t.equal(fn('U+1bca7'), 'Shorthand Format Controls');
	t.equal(fn('U+1bcaf'), 'Shorthand Format Controls');
	t.equal(fn('U+1d000'), 'Byzantine Musical Symbols');
	t.equal(fn('U+1d0f7'), 'Byzantine Musical Symbols');
	t.equal(fn('U+1d0ff'), 'Byzantine Musical Symbols');
	t.equal(fn('U+1d100'), 'Musical Symbols');
	t.equal(fn('U+1d1f7'), 'Musical Symbols');
	t.equal(fn('U+1d1ff'), 'Musical Symbols');
	t.equal(fn('U+1d200'), 'Ancient Greek Musical Notation');
	t.equal(fn('U+1d247'), 'Ancient Greek Musical Notation');
	t.equal(fn('U+1d24f'), 'Ancient Greek Musical Notation');
	t.equal(fn('U+1d300'), 'Tai Xuan Jing Symbols');
	t.equal(fn('U+1d357'), 'Tai Xuan Jing Symbols');
	t.equal(fn('U+1d35f'), 'Tai Xuan Jing Symbols');
	t.equal(fn('U+1d360'), 'Counting Rod Numerals');
	t.equal(fn('U+1d377'), 'Counting Rod Numerals');
	t.equal(fn('U+1d37f'), 'Counting Rod Numerals');
	t.equal(fn('U+1d400'), 'Mathematical Alphanumeric Symbols');
	t.equal(fn('U+1d7f7'), 'Mathematical Alphanumeric Symbols');
	t.equal(fn('U+1d7ff'), 'Mathematical Alphanumeric Symbols');
	t.equal(fn('U+1d800'), 'Sutton SignWriting');
	t.equal(fn('U+1daa7'), 'Sutton SignWriting');
	t.equal(fn('U+1daaf'), 'Sutton SignWriting');
	t.equal(fn('U+1e800'), 'Mende Kikakui');
	t.equal(fn('U+1e8d7'), 'Mende Kikakui');
	t.equal(fn('U+1e8df'), 'Mende Kikakui');
	t.equal(fn('U+1ee00'), 'Arabic Mathematical Alphabetic Symbols');
	t.equal(fn('U+1eef7'), 'Arabic Mathematical Alphabetic Symbols');
	t.equal(fn('U+1eeff'), 'Arabic Mathematical Alphabetic Symbols');
	t.equal(fn('U+1f000'), 'Mahjong Tiles');
	t.equal(fn('U+1f027'), 'Mahjong Tiles');
	t.equal(fn('U+1f02f'), 'Mahjong Tiles');
	t.equal(fn('U+1f030'), 'Domino Tiles');
	t.equal(fn('U+1f097'), 'Domino Tiles');
	t.equal(fn('U+1f09f'), 'Domino Tiles');
	t.equal(fn('U+1f0a0'), 'Playing Cards');
	t.equal(fn('U+1f0f7'), 'Playing Cards');
	t.equal(fn('U+1f0ff'), 'Playing Cards');
	t.equal(fn('U+1f100'), 'Enclosed Alphanumeric Supplement');
	t.equal(fn('U+1f1f7'), 'Enclosed Alphanumeric Supplement');
	t.equal(fn('U+1f1ff'), 'Enclosed Alphanumeric Supplement');
	t.equal(fn('U+1f200'), 'Enclosed Ideographic Supplement');
	t.equal(fn('U+1f2f7'), 'Enclosed Ideographic Supplement');
	t.equal(fn('U+1f2ff'), 'Enclosed Ideographic Supplement');
	t.equal(fn('U+1f300'), 'Miscellaneous Symbols and Pictographs');
	t.equal(fn('U+1f5f7'), 'Miscellaneous Symbols and Pictographs');
	t.equal(fn('U+1f5ff'), 'Miscellaneous Symbols and Pictographs');
	t.equal(fn('U+1f600'), 'Emoticons (Emoji)');
	t.equal(fn('U+1f647'), 'Emoticons (Emoji)');
	t.equal(fn('U+1f64f'), 'Emoticons (Emoji)');
	t.equal(fn('U+1f650'), 'Ornamental Dingbats');
	t.equal(fn('U+1f677'), 'Ornamental Dingbats');
	t.equal(fn('U+1f67f'), 'Ornamental Dingbats');
	t.equal(fn('U+1f680'), 'Transport and Map Symbols');
	t.equal(fn('U+1f6f7'), 'Transport and Map Symbols');
	t.equal(fn('U+1f6ff'), 'Transport and Map Symbols');
	t.equal(fn('U+1f700'), 'Alchemical Symbols');
	t.equal(fn('U+1f777'), 'Alchemical Symbols');
	t.equal(fn('U+1f77f'), 'Alchemical Symbols');
	t.equal(fn('U+1f780'), 'Geometric Shapes Extended');
	t.equal(fn('U+1f7f7'), 'Geometric Shapes Extended');
	t.equal(fn('U+1f7ff'), 'Geometric Shapes Extended');
	t.equal(fn('U+1f800'), 'Supplemental Arrows-C');
	t.equal(fn('U+1f8f7'), 'Supplemental Arrows-C');
	t.equal(fn('U+1f8ff'), 'Supplemental Arrows-C');
	t.equal(fn('U+1f900'), 'Supplemental Symbols and Pictographs');
	t.equal(fn('U+1f9f7'), 'Supplemental Symbols and Pictographs');
	t.equal(fn('U+1f9ff'), 'Supplemental Symbols and Pictographs');
	t.end();
});

test('reports Unassigned values', function (t) {
	t.equal(fn('U+1000000000000000'), 'Unassigned');
	t.end();
});
